name: CI - Build, Push and Deploy Docker Image

on:
  push:
    branches: [ "ci-cd" ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Upload code as artifact
        uses: actions/upload-artifact@v4
        with:
          name: code
          path: .

  build-and-push:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Download code artifact
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build Docker image
        run: docker build -t jjehl/canin-premiere-langue:${{ github.sha }} .
      - name: Push Docker image
        run: docker push jjehl/canin-premiere-langue:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: prod
    steps:
      - name: Download code artifact
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .

      - name: Debug SSH variables
        run: |
          echo "SSH_IP: ${{ secrets.SSH_IP }}"
          echo "SSH_USER: ${{ secrets.SSH_USER }}"
          echo "SSH_PORT: ${{ secrets.SSH_PORT }}"

      - name: Set SSH_PRIVATE_KEY environment variable
        run: echo "${{ secrets.CANIN_PRIVATE_KEY }}" > private_key && chmod 600 private_key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.CANIN_PRIVATE_KEY }}

      - name: Manual SSH Test
        run: |
          echo $SSH_PRIVATE_KEY
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} -i private_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_IP }} "echo 'SSH connection successful'"

      - name: Verify deploy.sh exists
        run: |
          ls -la
          if [ -f ./deploy/deploy.sh ]; then
            echo "deploy.sh exists"
          else
            echo "deploy.sh does not exist"
            exit 1
          fi

      - name: Manual SCP Test
        run: |
          scp -o StrictHostKeyChecking=no -P ${{ secrets.SSH_PORT }} -i private_key ./deploy/deploy.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_IP }}:/home/canin/deploy.sh

      - name: Copy deploy.sh to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.CANIN_PRIVATE_KEY }}
          source: ./deploy/deploy.sh
          target: /home/canin/deploy.sh
          port: ${{ secrets.SSH_PORT }}
          debug: true